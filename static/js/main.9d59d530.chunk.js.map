{"version":3,"sources":["assets/images/mountain/mountain.jpg","assets/images/mountain/landscape-right.png","assets/images/mountain/landscape-left.png","assets/images/mountain/forest-1.png","assets/images/mountain/forest-2.png","assets/images/mountain/forest-3.png","assets/images/mountain/mountain-base.png","assets/images/mountain/mountain-mid.png","assets/images/mountain/mountain-peak.png","components/banner/Banner.js","components/portfolio/portfolioNav/PortfolioNav.js","components/portfolio/projectCard/ProjectCard.js","components/portfolio/portfolioCarousel/PortfolioCarousel.js","components/portfolio/Portfolio.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Banner","handleLoad","props","parallaxController","update","window","scrollTo","className","layers","children","src","mountain","onLoad","this","alt","amount","expanded","image","mountainPeak","mountainMid","mountainBase","forest3","forest2","forest1","landscapeLeft","landscapeRight","style","height","React","Component","withController","PortfolioNav","href","ProjectCard","settings","glare","scale","PortfolioCarousel","centerMode","infinite","centerPadding","slidesToShow","speed","Portfolio","SmoothScroll","stepSize","animationTime","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,kWCcrCC,E,2MAELC,WAAa,WACZ,EAAKC,MAAMC,mBAAmBC,SAC9BC,OAAOC,SAAS,EAAG,I,wEAIlB,OACE,yBAAKC,UAAU,UACd,kBAAC,iBAAD,CACCA,UAAU,aACVC,OAAQ,CACP,CACCC,SAAU,yBAAKC,IAAKC,IAAUC,OAAQC,KAAKZ,WAAYa,IAAI,2BACvDC,OAAQ,EACRC,UAAU,GAEb,CACGC,MAAON,IACPI,OAAQ,IACRC,UAAU,GAEb,CACGC,MAAOC,IACPH,OAAQ,IACRC,UAAU,GAEb,CACGC,MAAOE,IACPJ,OAAQ,IACRC,UAAU,GAEb,CACGP,SAAU,yBAAKF,UAAU,iBAAgB,wBAAIA,UAAU,SAAd,yBACzCQ,OAAQ,IACRC,UAAU,GAEb,CACGC,MAAOG,IACPL,OAAQ,IACRC,UAAU,GAEb,CACGC,MAAOI,IACPN,OAAQ,IACRC,UAAU,GAEb,CACGC,MAAOK,IACPP,OAAQ,GACRC,UAAU,GAEb,CACGC,MAAOM,IACPR,OAAQ,GACRC,UAAU,GAEb,CACGC,MAAOO,IACPT,OAAQ,IACRC,UAAU,GAEb,CACGC,MAAOQ,IACPV,OAAQ,EACRC,UAAU,GAEb,CACGP,SAAU,yBAAKF,UAAU,eACxB,wBAAIA,UAAU,QAAd,eACA,yBAAKA,UAAU,OACd,4BAAQA,UAAU,qCAAlB,eAKFQ,OAAQ,EACRC,UAAU,IAGhBU,MAAO,CACJC,OAAQ,gB,GAlFGC,IAAMC,WA2FZC,2BAAe9B,GC3Ff+B,MAZf,WACE,OACE,yBAAKxB,UAAU,iBACd,wBAAIA,UAAU,QAAd,eACA,6BACC,uBAAGyB,KAAK,IAAIzB,UAAU,YAAtB,SACA,uBAAGyB,KAAK,IAAIzB,UAAU,YAAtB,gB,kCCYS0B,MAjBf,WACE,OACC,kBAAC,IAAD,CACC1B,UAAU,QACV2B,SAAU,CACTC,OAAO,EACPC,MAAO,KACP,YAAa,KAGb,yBAAK7B,UAAU,gBACb,wBAAIA,UAAU,SAAd,mBCiCQ8B,G,6LA3BZ,OACE,yBAAK9B,UAAU,sBACd,kBAAC,IAXa,CAChBA,UAAW,SACX+B,YAAY,EACZC,UAAU,EACVC,cAAe,OACfC,aAAc,EACdC,MAAO,KAMD,6BACE,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,a,GA9BoBd,IAAMC,YCKvBc,MATf,WACE,OACE,yBAAKpC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFNqC,IAAa,CACZC,SAAU,GACVC,cAAe,MAeDC,MAZf,WACE,OACE,yBAAKxC,UAAU,OACd,kBAAC,mBAAD,KACC,kBAAC,EAAD,OAGD,kBAAC,EAAD,QCPeyC,QACW,cAA7B3C,OAAO4C,SAASC,UAEe,UAA7B7C,OAAO4C,SAASC,UAEhB7C,OAAO4C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.9d59d530.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mountain.b4145827.jpg\";","module.exports = __webpack_public_path__ + \"static/media/landscape-right.718ada9c.png\";","module.exports = __webpack_public_path__ + \"static/media/landscape-left.a9d66d1f.png\";","module.exports = __webpack_public_path__ + \"static/media/forest-1.1515a780.png\";","module.exports = __webpack_public_path__ + \"static/media/forest-2.0d8f7feb.png\";","module.exports = __webpack_public_path__ + \"static/media/forest-3.e9315340.png\";","module.exports = __webpack_public_path__ + \"static/media/mountain-base.f3cba6c1.png\";","module.exports = __webpack_public_path__ + \"static/media/mountain-mid.d37801ee.png\";","module.exports = __webpack_public_path__ + \"static/media/mountain-peak.a00822e0.png\";","import React from 'react';\r\nimport { ParallaxBanner, withController } from 'react-scroll-parallax';\r\n\r\nimport mountain from '../../assets/images/mountain/mountain.jpg';\r\nimport landscapeRight from '../../assets/images/mountain/landscape-right.png';\r\nimport landscapeLeft from '../../assets/images/mountain/landscape-left.png';\r\nimport forest1 from '../../assets/images/mountain/forest-1.png';\r\nimport forest2 from '../../assets/images/mountain/forest-2.png';\r\nimport forest3 from '../../assets/images/mountain/forest-3.png';\r\nimport mountainBase from '../../assets/images/mountain/mountain-base.png';\r\nimport mountainMid from '../../assets/images/mountain/mountain-mid.png';\r\nimport mountainPeak from '../../assets/images/mountain/mountain-peak.png';\r\n\r\n\r\nclass Banner extends React.Component {\r\n\r\n\thandleLoad = () => {\r\n\t\tthis.props.parallaxController.update();\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\trender() {\r\n\t  return (\r\n\t    <div className=\"banner\">\r\n\t\t    <ParallaxBanner\r\n\t\t\t    className=\"your-class\"\r\n\t\t\t    layers={[\r\n\t\t\t    \t{\r\n\t\t\t    \t\tchildren: <img src={mountain} onLoad={this.handleLoad} alt='Mountain banner image.' />,\r\n\t            amount: 1,\r\n\t            expanded: false,\r\n\t\t\t    \t},\r\n\t\t        {\r\n\t            image: mountain,\r\n\t            amount: 0.53,\r\n\t            expanded: false,\r\n\t\t        },\r\n\t\t        {\r\n\t            image: mountainPeak,\r\n\t            amount: 0.48,\r\n\t            expanded: false,\r\n\t\t        },\r\n\t\t        {\r\n\t            image: mountainMid,\r\n\t            amount: 0.46,\r\n\t            expanded: false,\r\n\t\t        },\r\n\t\t        {\r\n\t            children: <div className='title-wrapper'><h1 className='title'>Full Stack Developer</h1></div>,\r\n\t            amount: 0.47,\r\n\t            expanded: false,\r\n\t\t        },\r\n\t\t        {\r\n\t            image: mountainBase,\r\n\t            amount: 0.44,\r\n\t            expanded: false,\r\n\t\t        },\r\n\t\t        {\r\n\t            image: forest3,\r\n\t            amount: 0.36,\r\n\t            expanded: false,\r\n\t\t        },\r\n\t\t        {\r\n\t            image: forest2,\r\n\t            amount: 0.30,\r\n\t            expanded: false,\r\n\t\t        },\r\n\t\t        {\r\n\t            image: forest1,\r\n\t            amount: 0.20,\r\n\t            expanded: false,\r\n\t\t        },\r\n\t\t        {\r\n\t            image: landscapeLeft,\r\n\t            amount: 0.05,\r\n\t            expanded: false,\r\n\t\t        },\r\n\t\t        {\r\n\t            image: landscapeRight,\r\n\t            amount: 0.00,\r\n\t            expanded: false,\r\n\t\t        },\r\n\t\t        {\r\n\t            children: <div className='top-wrapper'>\r\n\t            \t<h1 className='name'>Krisli Dimo</h1>\r\n\t            \t<div className='nav'>\r\n\t            \t\t<button className='nav-link portfolio-link hvr-float'>\r\n\t            \t\t\tPortfolio\r\n\t            \t\t</button>\r\n\t            \t</div>\r\n\t            </div>,\r\n\t            amount: 0,\r\n\t            expanded: false,\r\n\t\t        },\r\n\t\t\t    ]}\r\n\t\t\t    style={{\r\n\t\t        height: '100vh',\r\n\t\t\t    }}\r\n\t\t\t\t>\r\n\t\t\t\t</ParallaxBanner>\r\n\t    </div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nexport default withController(Banner);","import React from 'react';\r\n\r\nfunction PortfolioNav() {\r\n  return (\r\n    <div className=\"portfolio-nav\">\r\n    \t<h2 className=\"name\">Krisli Dimo</h2>\r\n    \t<nav>\r\n\t    \t<a href='#' className=\"nav-item\">About</a>\r\n  \t  \t<a href='#' className=\"nav-item\">Portfolio</a>\r\n  \t  </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PortfolioNav;\r\n","import React from 'react';\r\nimport Tilty  from 'react-tilty';\r\n\r\nfunction ProjectCard() {\r\n  return (\r\n  \t<Tilty\r\n  \t\tclassName=\"tilty\"\r\n  \t\tsettings={{\r\n  \t\t\tglare: true,\r\n  \t\t\tscale: 1.08,\r\n  \t\t\t\"max-glare\": 0.5\r\n  \t\t}}\r\n  \t>\r\n    \t<div className=\"project-card\">\r\n    \t\t\t<h2 className=\"inner\">Hello, World</h2>\r\n   \t \t</div>\r\n   \t</Tilty>\r\n  );\r\n}\r\n\r\nexport default ProjectCard;\r\n","import React from 'react';\r\nimport Slider from \"react-slick\";\r\n\r\nimport ProjectCard from '../projectCard/ProjectCard.js';\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\nclass PortfolioCarousel extends React.Component {\r\n  render () {\r\n  \tconst settings = {\r\n\t\t  className: \"center\",\r\n\t\t  centerMode: true,\r\n\t\t  infinite: true,\r\n\t\t  centerPadding: \"60px\",\r\n\t\t  slidesToShow: 3,\r\n\t\t  speed: 500\r\n\t\t};\r\n\r\n\t  return (\r\n\t    <div className=\"portfolio-carousel\">\r\n\t    \t<Slider {...settings}>\r\n          <div>\r\n            <ProjectCard />\r\n          </div>\r\n          <div>\r\n            <ProjectCard />\r\n          </div>\r\n          <div>\r\n            <ProjectCard />\r\n          </div>\r\n          <div>\r\n            <ProjectCard />\r\n          </div>\r\n          <div>\r\n            <ProjectCard />\r\n          </div>\r\n          <div>\r\n            <ProjectCard />\r\n          </div>\r\n        </Slider>\r\n\t    </div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nexport default PortfolioCarousel;\r\n","import React from 'react';\r\n\r\nimport PortfolioNav from './portfolioNav/PortfolioNav.js';\r\nimport PortfolioCarousel from './portfolioCarousel/PortfolioCarousel.js';\r\n\r\nfunction Portfolio() {\r\n  return (\r\n    <div className=\"portfolio\">\r\n      <PortfolioNav />\r\n      <PortfolioCarousel />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from 'react';\r\nimport { ParallaxProvider } from 'react-scroll-parallax';\r\nimport SmoothScroll from 'smoothscroll-for-websites';\r\n\r\nimport Banner from '../banner/Banner.js'\r\nimport Portfolio from '../portfolio/Portfolio.js'\r\n\r\nSmoothScroll({ \r\n\tstepSize: 40,  // [px]\r\n\tanimationTime: 500, // [ms]\r\n})\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    \t<ParallaxProvider>\r\n    \t\t<Banner />\r\n    \t</ ParallaxProvider>\r\n\r\n    \t<Portfolio />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}